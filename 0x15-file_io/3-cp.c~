#include "main.h"
#include <stdlib.h>
#include <stdio.h>

/**
 * create_buffer - 1024 bytes of memory is allocated to buffer
 * @file: stores file buffer
 * Return: points to the newly allocated buffer 
 */

char *create_buffer(char *file);

char *create_buffer(char *file)
{
char *buff;

buff = malloc(sizeof(char) * 1024);

if (buff == NULL)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file);
exit(99);
}
return (buff);
}

/**
 * close_file - Closes the file descriptor
 * @des: The file descriptor 
 */

void close_file(int des);

void close_file(int des)
{
int cl;

cl = close(des);

if (cl == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", des);
exit(100);
}
}

/**
 * main - program that copies the content of a file to another file
 * @argc: argument counts supplied to the program
 * @argv: Array pointers to the argument
 * Return: 0 on success
 */

int main(int argc, char *argv[])
{
int a, b, rd, wr;
char *buff;

if (argc != 3)
{
dprintf(STDERR_FILENO, "Usage: cp file_from file_to\n");
exit(97);
}

buff = create_buffer(argv[2]);
a = open(argv[1], O_RDONLY);
rd = read(a, buff, 1024);
b = open(argv[2], O_CREAT | O_WRONLY | O_TRUNC, 0664);

while (rd > 0)
{
if (a == -1 || rd == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", argv[1]);
free(buff);
exit(98);
}

wr = write(b, buff, rd);

if (b == -1 || wr == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", argv[2]);
free(buff);
exit(99);
}

rd = read(a, buff, 1024);
b = open(argv[2], O_WRONLY | O_APPEND);
}

free(buff);
close_file(a);
close_file(b);

return (0);
}
